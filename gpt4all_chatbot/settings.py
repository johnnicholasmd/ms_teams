"""
Django settings for gpt4all_chatbot project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from os import getenv
from dotenv import load_dotenv, find_dotenv


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-n#oud$kiy4@urmuw5_ypwzlvfe3(4_&!s#)&#yyl=n7_flslx-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


load_dotenv(find_dotenv())

# Run on local server
# DO NOT REMOVE https://alicia-chat-dev.ap-southeast-1.elasticbeanstalk.com this is for AWS Deployment
ALLOWED_HOSTS = ['localhost:3000', 'localhost:5000', '127.0.0.1:4040','localhost','127.0.0.1', 'alicia-chat-dev-png.ap-southeast-1.elasticbeanstalk.com','employee-portal-dev.ap-southeast-1.elasticbeanstalk.com', 'alicia-chat-prod.ap-southeast-1.elasticbeanstalk.com','e9d5-175-176-23-8.ngrok-free.app',os.getenv('INSTANCE')+'.service-now.com']
# CSRF_TRUSTED_ORIGINS= ['http://localhost:3000', 'http://localhost:5000', 'https://alicia-chat-dev.ap-southeast-1.elasticbeanstalk.com','https://employee-portal-dev.ap-southeast-1.elasticbeanstalk.com']
# CSRF_ALLOWED_ORIGINS= ['http://localhost:3000', 'http://localhost:5000', 'https://alicia-chat-dev.ap-southeast-1.elasticbeanstalk.com','https://employee-portal-dev.ap-southeast-1.elasticbeanstalk.com']
# CORS_ORIGINS_WHITELIST= ['http://localhost:3000', 'http://localhost:5000', 'https://alicia-chat-dev.ap-southeast-1.elasticbeanstalk.com','https://employee-portal-dev.ap-southeast-1.elasticbeanstalk.com']

# Run on Ngrok
# Donwload ngrok here https://ngrok.com/download, create account for authtoken, run this command ngrok config add-authtoken <token>, then ngrok http 80, comment out ALLOWED_HOSTS on local server 
# and remove '#' for the ALLOWED_HOSTS below, then py manage.py runserver
# ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'gpt4all_app',
    'django_extensions',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Use database-backed sessions

ROOT_URLCONF = 'gpt4all_chatbot.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'gpt4all_chatbot.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
  'default': {
    'ENGINE': 'django.db.backends.postgresql',
    'NAME': os.getenv('DB_NAME'),
    'USER': os.getenv('DB_USER'),
    'PASSWORD': os.getenv('DB_PASSWORD'),
    'HOST': os.getenv('DB_HOST'),
    'PORT': os.getenv('DB_PORT'),
    'OPTIONS': {'sslmode': 'require'},
  }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'gpt4all_app/static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

X_FRAME_OPTIONS = 'ALLOWALL'

# Allow all domains for simplicity (adjust as needed)
CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:8000",
    "http://localhost:8000",
    "http://localhost:3000",
    "http://localhost:5000",
    "https://alicia-chat-dev.ap-southeast-1.elasticbeanstalk.com",
    "https://employee-portal-dev.ap-southeast-1.elasticbeanstalk.com",
    "https://alicia-chat-prod.ap-southeast-1.elasticbeanstalk.com",
    "https://alicia-chat-dev-png.ap-southeast-1.elasticbeanstalk.com",
]

# CORS_ALLOWED_ORIGINS = ['*']
CORS_ALLOW_METHODS = ['DELETE', 'GET', 'OPTIONS', 'PATCH', 'POST', 'PUT']
CORS_ALLOW_HEADERS = ['accept', 'accept-encoding', 'authorization', 'content-type', 'dnt', 'origin', 'user-agent', 'x-csrftoken', 'x-requested-with', 'content-disposition']
CORS_ALLOW_CREDENTIALS = True

# settings.py

SESSION_COOKIE_SAMESITE = 'None'
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_COOKIE_SECURE = True  # Set to True if your application is served over HTTPS

# pbi
AZURE_TENANT_ID = 'd15d6348-bf2b-4e12-a6cb-39c223b9f3d2'
AZURE_CLIENT_ID = '20856723-7d0a-4f0e-8adb-ce76c925d64f'
AZURE_CLIENT_SECRET = '4qM8Q~Y.-WS2SEml3NO-7wSo3mfwflLk9DDgCbAE'
